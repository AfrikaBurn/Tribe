<?php

/**
 * @file
 * Contains Afrikaburn Shared module.
 */

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use \Drupal\user\Entity\User;

/**
 * Implements hook_form_alter().
 */
function afrikaburn_collective_form_node_collective_form_alter(&$form, $form_state, $form_id) {

  $user = isset($user) ? $user : User::load(\Drupal::currentUser()->id());

  if (substr($form_id, 0, strlen('node_collective')) === 'node_collective') {
    $form['field_col_admins']['#access'] = $user->hasRole('administrator');
    $form['field_col_members']['#access'] = $user->hasRole('administrator');
    if ($form_id == 'node_collective_form'){
      $form['field_col_admins']['widget'][0]['target_id']['#default_value'] = $user;
      $form['field_col_members']['widget'][0]['target_id']['#default_value'] = $user;
    }
  }
}

/**
 * Implements hook_views_pre_view().
 * Hooked to set collective on drop down view selects
 */
function afrikaburn_collective_views_pre_view(\Drupal\views\ViewExecutable $view, $display_id, &$args){
  if ($view->id() == 'collective_members' && $display_id == 'entity_reference_1'){
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node && $node->field_collective){
      $args[0] = $node->field_collective->first()->getValue()['target_id'];
    } else if ($cid = \Drupal::request()->query->get('field_collective')) {
      $args[0] = $cid;
    }
  }
}
