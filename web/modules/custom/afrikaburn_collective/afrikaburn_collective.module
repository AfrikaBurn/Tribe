<?php

/**
 * @file
 * Contains Afrikaburn Shared module.
 */

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use \Drupal\user\Entity\User;


/**
 * Implements hook_page_attachments().
 * Attach collective libraries.
 */
function afrikaburn_collective_page_attachments(&$page) {
  $page['#attached']['library'][] = 'afrikaburn_collective/main';
}

/**
 * Implements hook_form_alter().
 */
function afrikaburn_collective_form_alter(&$form, $form_state, $form_id) {
  if (preg_match('/^node_collective/', $form_id)) {

    $user = User::load(\Drupal::currentUser()->id());
    $form['field_col_admins']['#access'] = $user->hasRole('administrator');
    $form['field_col_members']['#access'] = $user->hasRole('administrator');
    $form['field_col_invite_mail']['#access'] = $user->hasRole('administrator');
    $form['field_col_invite_token']['#access'] = $user->hasRole('administrator');

    if ($form_id == 'node_collective_form'){
      $form['field_col_admins']['widget'][0]['target_id']['#default_value'] = $user;
      $form['field_col_members']['widget'][0]['target_id']['#default_value'] = $user;
    }
  }
}

/**
 * Implements hook_views_pre_view().
 * Hooked to set collective on drop down view selects
 */
function afrikaburn_collective_views_pre_view($view, $display_id, &$args){
  if ($view->id() == 'collective_members' && $display_id == 'entity_reference_1'){
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node && $node->field_collective){
      $args[0] = $node->field_collective->first()->getValue()['target_id'];
    } else if ($cid = \Drupal::request()->query->get('field_collective')) {
      $args[0] = $cid;
    }
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function afrikaburn_collective_entity_extra_field_info() {
  $extra = array();

  $extra['node']['collective']['display']['posts'] = array(
    'label' => t('Posts'),
    'description' => t('View of the latest posts'),
    'weight' => 100,
    'visible' => TRUE,
  );

  $extra['node']['collective']['display']['post_something'] = array(
    'label' => t('Post form'),
    'description' => t('Form to create a post'),
    'weight' => 100,
    'visible' => TRUE,
  );

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function afrikaburn_collective_node_view(&$build, $entity, $display, $view_mode) {

  $nid = $entity->id();

  if ($display->getComponent('posts')){
    $build['posts'] = views_embed_view('collective_posts', 'posts', $nid);
  }

  if ($display->getComponent('post_something')){
    $form = \Drupal::service('entity.form_builder')->getForm(
      \Drupal::entityTypeManager()->getStorage('comment')->create(
        [
          'entity_type'  => 'node',
          'entity_id'    => $nid,
          'field_name'   => 'field_col_posts',
          'comment_type' => 'post',
          'pid' => NULL,
        ]
      )
    );

    unset($form['comment_body']['widget'][0]['value']['#title']);
    $form['actions']['submit']['#value'] = t('Post it!');

    $form['#action'] .= '?destination=' . \Drupal\Component\Utility\UrlHelper::encodePath(drupal_get_destination()['destination']);

    $build['post_something'] = [
      '#type' => 'markup',
      '#markup' => render($form),
      '#prefix' => '<details class="comment-form"><summary class="button">Post something</summary>',
      '#suffix' => '</details>',
    ];
  }
}


/* ----- Theme hooks ----- */


/**
 * Implements hook_theme().
 * Views Customizaton.
 */
function afrikaburn_collective_theme(){
  return [

    'views_view_fields__collective_posts' => [
      'template' => 'views-view-fields--collective-posts',
      'base hook' => 'view',
    ],

  ];
}


/* ----- Preprocessors ----- */


/**
 * Implements hook_preprocess_views_view_fields().
 */
function afrikaburn_collective_preprocess_views_view_fields(&$variables) {

  $view = $variables['view'];

  if ($view->id() == 'collective_posts' && $view->current_display == 'posts') {

    $row = $variables['row'];
    $cid = $row->_entity->get('cid')->value;
    $nid = $variables['view']->args[0];

    $form =  \Drupal::service('entity.form_builder')->getForm(
      \Drupal::entityTypeManager()->getStorage('comment')->create(
        [
          'entity_type'  => 'node',
          'entity_id'    => $nid,
          'field_name'   => 'field_col_posts',
          'comment_type' => 'comment',
          'pid' => $cid,
        ]
      )
    );
    unset($form['comment_body']['widget'][0]['value']['#title']);
    $form['pid']['#value'] = $cid;

    $variables['fields']['replyto_comment']['content'] = render($form);
  }
}

/**
 * Implements hook_form_FORM_ID_alter()
 * Fixes comment form bug
 */
function afrikaburn_collective_form_comment_comment_form_alter(&$form, $form_state, $form_id){
  $form['pid'] = [
    '#name' => 'pid',
    '#type' => 'hidden',
  ];
  $form['actions']['submit']['#value'] = t('Say it!');
}

/**
 * Implements computed_field_field_col_invite_token_compute()
 */
function computed_field_field_col_invite_token_compute($entity_type_manager, $entity, $fields, $delta){
  return $entity;
}