<?php

/**
 * @file Contains afrikaburn incident module.
 */

/**
 * Implements hook_form_FORM_ID_alter()
 * Prepopulates type from URL
 */
function afrikaburn_incident_form_node_incident_form_alter(&$form, &$form_state){

  $new_state = \Drupal::request()->get('newstate');
  if ($new_state) {
    $form['field_incident_state']['widget']['#default_value'] = $new_state;
    $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($new_state);
    $form['field_description']['widget'][0]['value']['#default_value'] = 'Changing state to ' . $term->name->value;
  }

  $form['actions'][] = [
    '#type' => 'markup',
    '#markup' => '<a class="button" href="/wrangle/incidents">Cancel</a>',
    '#weight' => 100,
  ];

  $form['#action'] == '/node/add/incident';

  $form['advanced']['#access'] = FALSE;
  $form['actions']['submit']['#submit'][] = 'afrikaburn_incident_submit';
}

/**
 * Implements hook_theme().
 * Views Customizaton.
 */
function afrikaburn_incident_theme(){
  return [
    'views_view__wrangle_incidents' => [
      'template' => 'views-view--wrangle',
      'base hook' => 'view',
    ],
    'views_view_table__wrangle_incidents' => [
      'template' => 'views-view-table--wrangle-incidents',
      'base hook' => 'view',
    ],
    'views_view_fields__wrangle_incident_comments' => [
      'template' => 'views-view-fields--wrangle-incident-comments',
      'base hook' => 'view',
    ],
  ];
}

/**
 * Implements hook_preprocess_views_view().
 */
function afrikaburn_incident_preprocess_views_view(&$variables){
  switch ($variables['id']){
    case 'wrangle_incidents':
      $variables['#attached']['library'][] = 'afrikaburn_incident/log';
      $variables['#attached']['library'][] = 'afrikaburn_shared/log';
    break;
  }
}

/**
 * Implements hook_preprocess_views_view_table().
 */
function afrikaburn_incident_preprocess_views_view_table(&$variables) {
  if ($variables['view']->id() == 'wrangle_incidents') {

    $view = $variables['view'];

    // Insert forms
    foreach($variables['rows'] as $index=>&$row){
      $nid = $view->result[$index]->_entity->id();

      // Latest comment
      $row['columns']['field_description']['content'][] = [
        'field_output' => @render(views_embed_view('wrangle_incident_comments', 'latest', $nid))
      ];
      // Comment form
      $form = [
        '#type' => 'details',
        '#title' => 'Add comment',
        'content' => \Drupal::service('entity.form_builder')->getForm(
          \Drupal::entityTypeManager()->getStorage('comment')->create(
            [
              'entity_type'  => 'node',
              'entity_id'    => $nid,
              'field_name'   => 'field_comments',
              'comment_type' => 'incident_comment',
              'pid' => NULL,
              'published' => 1,
              'status' => 1,
            ]
          )
        )
      ];
      unset($form['content']['field_body']['widget'][0]['value']['#title']);
      $form['content']['#action'] .= '?destination=' . \Drupal\Component\Utility\UrlHelper::encodePath(drupal_get_destination()['destination']);
      $history = [
        '#type' => 'details',
        '#title' => 'Older comments',
        'content' => views_embed_view('wrangle_incident_comments', 'history', $nid),
      ];
      $row['columns']['field_description']['content'][] = ['field_output' => render($history)];
      $row['columns']['field_description']['content'][] = ['field_output' => render($form)];
      $row['columns']['field_description']['content'][] = $row['columns']['field_description']['content'][3];
      unset($row['columns']['field_description']['content'][3]);
    }
  }
}

/**
 * Redirect incident submit to incident view
 */
function afrikaburn_incident_submit($form, $form_state){

  $values = $form_state->getValues();
  $properties = [
    'vid' => 'incident_type',
    'name' => 'State change'
  ];
  $state_changer = array_shift(
    \Drupal::entityManager()
      ->getStorage('taxonomy_term')
      ->loadByProperties($properties)
  );
  $state_change = in_array($state_changer->tid->value,
    array_column(
      $values['field_incident_type'], 'target_id'
    )
  );
  $new_state = array_shift(
    array_column(
      $values['field_incident_state'], 'target_id'
    )
  );
  $related = array_column(
    $values['field_related_incident'], 'target_id'
  );

  if ($state_change && $related) {
    $targets = \Drupal::entityTypeManager()
      ->getStorage('node')
      ->load($related);
    foreach($targets as $target){
      $target->set('field_incident_state', [['target_id' =>$new_state]]);
      $target->save();
    }
  }

  $url = \Drupal\Core\Url::fromUri('internal:/wrangle/incidents');
  $form_state->setRedirectUrl($url);
}

