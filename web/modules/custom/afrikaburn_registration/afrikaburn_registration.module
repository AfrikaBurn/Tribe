<?php
/**
 * @file: afrikaburn_registration.module
 */

use \Drupal\user\Entity\User;


/* ----- Form alters ----- */


/**
 * Implements hook_form_alter().
 */
function afrikaburn_registration_form_alter(&$form, $form_state, $form_id) {

  // dpm($form_state->getFormObject());

  module_load_include('inc', 'afrikaburn_registration', 'includes/form');
  $registration_config = _project_form_config();
  $defaults = @($registration_config)[$form_id];

  if (isset($defaults)){

    $user = User::load(\Drupal::currentUser()->id());
    $is_wrangler = $user->hasRole($defaults['wrangler']);
    $is_admin = $user->hasRole('administrator');
    $is_complete = array_search($defaults['mode'], $form['field_prjr_complete']['widget']['#default_value']) !== FALSE;
    $is_new = $defaults['mode'] == 'new';

    // Get collective and existing registration
    $registration = \Drupal::routeMatch()->getParameter('node');
    $collective = _get_collective($registration);

    // Naughty naughty users
    if (!$collective) {
      drupal_set_message('Oops! You really should do that from within a collective', 'warning', true);
      $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal::url('<front>'));
      $response->send();
    }

    // Set title
    $form['#title'] = [
      '#type' => 'markup',
      '#markup' => _get_title($defaults, $collective, $registration),
    ];

    // Attach library
    $form['#attached']['library'][] = 'afrikaburn_registration/registration';

    // Hide fields
    $form['revision_log']['#access'] = $is_admin;
    $form['field_form_mode']['#type'] = 'hidden';
    $form['field_collective']['#access'] = $is_admin;
    if (!($is_wrangler || $is_admin)) $form['field_prjr_complete']['widget']['#type'] = 'hidden';

    // Hide inappropriate complete options per type
    $bundle = $form_state->getFormObject()->getEntity()->bundle();
    $form['field_prjr_complete']['widget']['#options'] = array_intersect_key(
      $form['field_prjr_complete']['widget']['#options'],
      array_flip(_project_form_modes()[$bundle]['modes'])
    );

    // Set defaults
    $form['field_collective']['widget'][0]['target_id']['#default_value'] = $collective;
    $form['field_form_mode']['widget'][0]['value']['#default_value'] = $registration
      ? $defaults['mode']
      : 'new';
    if (!$is_wrangler) $form['field_prjr_complete']['widget']['#default_value'][] = $defaults['mode'];
    $form['#administrator'] = $is_admin || $is_wrangler;

    // Wizard or tabs (cake or death?)
    $form['#wizard'] = $is_new || $defaults['mode'] != 'edit' && ($incomplete || !$is_wrangler);
  }
}

/**
 * Implements hook_field_group_pre_render().
 */
function afrikaburn_registration_field_group_pre_render(&$element, &$group, &$form) {
  if ($group->group_name == 'group_project_registration' && $form['#wizard']){
    $form['#attributes']['class'][] = 'js-wizard';
  }
  if ($group->group_name == 'group_administrative' && !$form['#administrator']){
    $form['group_administrative']['#attributes']['class'][] = 'hidden';
  }
}


function afrikaburn_registration_theme() {
  return [
    'views_view_unformatted__wrangle_art__mail_leads' => [
      'template' => 'wrangle--addresses',
      'base hook' => 'view',
    ],
    'views_view__wrangle_art__mail_leads' => [
      'template' => 'wrangle--lead-contacts',
      'base hook' => 'view',
    ],
  ];
}